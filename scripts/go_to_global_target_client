#!/usr/bin/env python

# go_to_global_target_client
#
# Python script for dynamic mavros waypoint commands in flight
# 
# @author   Syler Wagner    <syler@mit.edu>
#
# @date     2016-06-22      creation

from __future__ import division
import rospy
from mavpro.srv import GoToGlobalPositionTarget
from mavros_msgs.msg import GlobalPositionTarget   

def request_go_to_target(tgt):
    rospy.wait_for_service('go_to_global_target')
    try:
        go_to = rospy.ServiceProxy('go_to_global_target', GoToGlobalPositionTarget)
        response = go_to(tgt)
        return response.success
    except rospy.ServiceException, e:
        print "Service call failed: %s"%e


# create a GlobalPositionTarget message
# this ignores everything except lat, long and altitude
# defaults to relative altitude
def generate_global_target_msg():
    
    target_yaml = rospy.get_param('~target')

    msg = GlobalPositionTarget()
    
    msg.coordinate_frame = rospy.get_param('~coordinate_frame', 5)
    # uint8 FRAME_GLOBAL_INT = 5
    # uint8 FRAME_GLOBAL_REL_ALT = 6
    # uint8 FRAME_GLOBAL_TERRAIN_ALT = 11

    msg.type_mask = 0b0000111111111000
    # uint16 IGNORE_LATITUDE = 1  # Position ignore flags
    # uint16 IGNORE_LONGITUDE = 2
    # uint16 IGNORE_ALTITUDE = 4
    # uint16 IGNORE_VX = 8    # Velocity vector ignore flags
    # uint16 IGNORE_VY = 16
    # uint16 IGNORE_VZ = 32
    # uint16 IGNORE_AFX = 64  # Acceleration/Force vector ignore flags
    # uint16 IGNORE_AFY = 128
    # uint16 IGNORE_AFZ = 256
    # uint16 FORCE = 512  # Force in af vector flag
    # uint16 IGNORE_YAW = 1024
    # uint16 IGNORE_YAW_RATE = 2048

    msg.latitude = target_yaml['latitude']
    msg.longitude = target_yaml['longitude']
    msg.altitude = target_yaml['altitude']

    msg.header.frame_id = rospy.get_param('~frame_id', 'fcu')
    msg.header.stamp = rospy.Time.now()
    return msg

if __name__ == "__main__":
    
    rospy.init_node('go_to_global_target_client')


    target_msg = generate_global_target_msg()
    request_go_to_target(target_msg)
